---
title: "Practice Activity 4"
format: html
editor: visual
---

```{r dataset}
#| message: false
library(tidyverse)
library(here)
library(readxl)

```

### Question 1

```{r}
#| message: false
military <- read_xlsx(here::here("supporting_artifacts", 
                                 "learning_targets",
                                 "Practice Activity 4", 
                                 "gov_spending_per_capita.xlsx"), 
                      sheet = "Share of Govt. spending", 
                      skip = 7, 
                      n_max = 191)
```

### Question 2

```{r}
#| message: false
military_clean <- military |>
  mutate(
    across(.cols = everything(),
    ~na_if(x = ., y = ". ." )
  ) |>
  mutate(
    across(.cols = everything(),
    ~na_if(x = ., y = ". ." ),
    ~na_if(x = ., y = "xxx")
  )))

# can do mutate(across(.cols = everything(), .fns(na_if, y = 'xxx')))
  #if dont put an x arguement then borrows from .cols
  #with . or .x is an alias "whatever column name get input into the period location
#~: here is the function : uses na_fi function and put all the inputs into the period part, and use xxx to replace missing values
  #across everyone column by replacing all the .. with NA's
    #replace across all these columns, 3 "xxx" or 0 with NA
```

### Question 3

```{r}
#| message: false
military_clean <- military_clean |>
  mutate(
    across(
      .cols = "1988":"2019",
      # ~as.numeric(.) #checks in row value
    )
  )
```

```{r}
#| message: false
cont_region <- read_xlsx(here::here("supporting_artifacts", 
                                    "learning_targets", 
                                    "Practice Activity 4",
                                    "gov_spending_per_capita.xlsx"), 
                      sheet = "Regional totals", 
                      skip = 14) |> 
  filter(Region != "World total (including Iraq)", 
         Region != "World total (excluding Iraq)")
```

```{r}
#| message: false
#| results: false
military_clean |> 
  filter(Country %in% cont_region$Region)
```

### Question 4

```{r}
military_clean <- military_clean |> 
  anti_join(cont_region, by = c('Country'='Region'))
#removed regions that matched to country's regions
```

### Question 5

```{r}
military_changed <- military_clean |>
  pivot_longer(cols = "1988":"2018",
               names_to = "Year",
               values_to = "Spending")
```
